library(tidyverse)
source('C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/code/StasBounds.R', echo=TRUE)
library(rio)
library(tidyverse)
library(xtable)
library(cobalt)
library(stargazer)
setwd('C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/code')
df <- import("searchperiod.dta")
# Q1: Compute average probability of receiving benefits
(mean(df[df$searchperiod == 0,]$benefits_week10) + mean(df[df$searchperiod == 0,]$benefits_week30))/2
(mean(df[df$searchperiod == 1,]$benefits_week10) + mean(df[df$searchperiod == 1,]$benefits_week30))/2
# Q2. Make a balancing table
bal.tab(df, treat = df$searchperiod,
disp = c("means", "sds"), un = TRUE,
stats = c("mean.diffs"))
#dfBalance <- df %>%
#group_by(searchperiod) %>%
#summarise(benefits_week10_mean <- mean(benefits_week10),
#benefits_week30_mean <- mean(benefits_week30),
#sumincome_12monthsbefore_mean <- mean(sumincome_12monthsbefore),
#sumincome_24monthsbefore_mean <- mean(sumincome_24monthsbefore),
#age_mean <- mean(age),
#female_mean <- mean(female),
#children_mean <- mean(children),
#partner_mean <- mean(partner),
#period1_mean <- mean(period1),
#period2_mean <- mean(period2),
#period3_mean <- mean(period3),
#period4_mean <- mean(period4),
#location1_mean <- mean(location1),
#location2_mean <- mean(location2),
#location3_mean <- mean(location3),
#location4_mean <- mean(location4),
#location5_mean <- mean(location5),
#educ_bachelormaster_mean <- mean(educ_bachelormaster),
#educ_prepvocational_mean <- mean(educ_prepvocational),
#educ_primaryorless_mean <- mean(educ_primaryorless),
#educ_unknown_mean <- mean(educ_unknown),
#educ_vocational_mean <- mean(educ_vocational))
#xtable(t(dfBalance), digits = 3)
# Q3: Run OLS
lm_benefit10_one <- lm(benefits_week10 ~ searchperiod, df)
lm_benefit30_one <- lm(benefits_week30 ~ searchperiod, df)
lm_benefit10_all <- lm(benefits_week10 ~ searchperiod + sumincome_12monthsbefore + sumincome_24monthsbefore +
age + female + children + partner, df)
lm_benefit30_all <- lm(benefits_week30 ~ searchperiod + sumincome_12monthsbefore + sumincome_24monthsbefore +
age + female + children + partner, df)
stargazer(lm_benefit10_one, lm_benefit30_one, lm_benefit10_all, lm_benefit30_all,
type = "text")
# Which covariates do we need to include?
# LEO: I would say let's do or 3 regressions with diff number of covariates
#on top of what we already have, introduce location and then also education
# Q4: Compute no-assumption bounds
EY_D1 <- mean(df[df$searchperiod == 1,]$benefits_week10)
EY_D0 <- mean(df[df$searchperiod == 0,]$benefits_week10)
Pr_D1 <- mean(df$searchperiod)
Pr_D0 <- 1 - mean(df$searchperiod)
minY <- min(df$benefits_week10)
maxY <- max(df$benefits_week10)
# ATE lower bound
(EY_D1 - maxY)*Pr_D1 + (minY - EY_D0)*Pr_D0
# ATE upper bound
(EY_D1 - minY)*Pr_D1 + (maxY - EY_D0)*Pr_D0
# Do the same for "benefits_week30"
# Q5: Use Roy model
# Roy model-ATE lower bound
-(EY_D0 - minY)*Pr_D0
# Roy model-ATE upper bound
(EY_D1 - minY)*Pr_D1
#LEO: agree, implemented the correct way
# Q6: Use MTR, MTS, and both #LEO: think this was incorrect, at least labels
# MTS-ATE lower bound, same as before
(EY_D1 - maxY)*Pr_D1 + (minY - EY_D0)*Pr_D0
# MTS-ATE upper bound, new
EY_D1 - EY_D0
# MTR-ATE lower bound
0
# MTR-ATE upper bound, same as before
(EY_D1 - minY)*Pr_D1 + (maxY - EY_D0)*Pr_D0
# Apply both MTS and MTR
# ATE lower bound
0
# ATE upper bound LEO: I understand that this is negative, but it is still an upper bound in terms of magnitude, and the equation is for the 'upper bound' of treatment magnitude
EY_D1 - EY_D0
# Q7:
#Leo: My interpretation is that we only use the dummy educ_bachelormaster as MIV
Pr_Z1 <- mean(df$educ_bachelormaster)
Pr_Z0 <- 1 - mean(df$educ_bachelormaster)
LB_d1_z0 = (1)/Pr_Z0 #this is still incomplete, need your R fluency to quickly code this, but I know how to in terms of eq
LB_d1_z1 = (1)/Pr_Z1
LB_d0_z0 = (1)/Pr_Z0
LB_d0_z1 = (1)/Pr_Z1
UB_d1_z0 = (1)/Pr_Z0
UB_d1_z1 = (1)/Pr_Z1
UB_d0_z0 = (1)/Pr_Z0
UB_d0_z1 = (1)/Pr_Z1
LB_d1 = Pr_Z0 * LB_d1_z0 + Pr_Z1 * max(LB_d1_z0, LB_d1_z1)
LB_d0 = Pr_Z0 * LB_d0_z0 + Pr_Z1 * max(LB_d0_z0, LB_d0_z1)
UB_d1 = Pr_Z1 * UB_d1_z1 + Pr_Z0 * min(UB_d1_z0, UB_d1_z1)
UB_d0 = Pr_Z1 * UB_d0_z1 + Pr_Z0 * min(UB_d0_z0, UB_d0_z1)
# Have a look at two last slides of the lecrure to add something else
library(rio)
library(tidyverse)
library(xtable)
library(cobalt)
library(stargazer)
setwd('C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/data')
df <- import("searchperiod.dta")
# Q1: Compute average probability of receiving benefits
(mean(df[df$searchperiod == 0,]$benefits_week10) + mean(df[df$searchperiod == 0,]$benefits_week30))/2
(mean(df[df$searchperiod == 1,]$benefits_week10) + mean(df[df$searchperiod == 1,]$benefits_week30))/2
# Q2. Make a balancing table
bal.tab(df, treat = df$searchperiod,
disp = c("means", "sds"), un = TRUE,
stats = c("mean.diffs"))
#dfBalance <- df %>%
#group_by(searchperiod) %>%
#summarise(benefits_week10_mean <- mean(benefits_week10),
#benefits_week30_mean <- mean(benefits_week30),
#sumincome_12monthsbefore_mean <- mean(sumincome_12monthsbefore),
#sumincome_24monthsbefore_mean <- mean(sumincome_24monthsbefore),
#age_mean <- mean(age),
#female_mean <- mean(female),
#children_mean <- mean(children),
#partner_mean <- mean(partner),
#period1_mean <- mean(period1),
#period2_mean <- mean(period2),
#period3_mean <- mean(period3),
#period4_mean <- mean(period4),
#location1_mean <- mean(location1),
#location2_mean <- mean(location2),
#location3_mean <- mean(location3),
#location4_mean <- mean(location4),
#location5_mean <- mean(location5),
#educ_bachelormaster_mean <- mean(educ_bachelormaster),
#educ_prepvocational_mean <- mean(educ_prepvocational),
#educ_primaryorless_mean <- mean(educ_primaryorless),
#educ_unknown_mean <- mean(educ_unknown),
#educ_vocational_mean <- mean(educ_vocational))
#xtable(t(dfBalance), digits = 3)
# Q3: Run OLS
lm_benefit10_one <- lm(benefits_week10 ~ searchperiod, df)
lm_benefit30_one <- lm(benefits_week30 ~ searchperiod, df)
lm_benefit10_all <- lm(benefits_week10 ~ searchperiod + sumincome_12monthsbefore + sumincome_24monthsbefore +
age + female + children + partner, df)
lm_benefit30_all <- lm(benefits_week30 ~ searchperiod + sumincome_12monthsbefore + sumincome_24monthsbefore +
age + female + children + partner, df)
stargazer(lm_benefit10_one, lm_benefit30_one, lm_benefit10_all, lm_benefit30_all,
type = "text")
# Which covariates do we need to include?
# LEO: I would say let's do or 3 regressions with diff number of covariates
#on top of what we already have, introduce location and then also education
# Q4: Compute no-assumption bounds
EY_D1 <- mean(df[df$searchperiod == 1,]$benefits_week10)
EY_D0 <- mean(df[df$searchperiod == 0,]$benefits_week10)
Pr_D1 <- mean(df$searchperiod)
Pr_D0 <- 1 - mean(df$searchperiod)
minY <- min(df$benefits_week10)
maxY <- max(df$benefits_week10)
# ATE lower bound
(EY_D1 - maxY)*Pr_D1 + (minY - EY_D0)*Pr_D0
# ATE upper bound
(EY_D1 - minY)*Pr_D1 + (maxY - EY_D0)*Pr_D0
# Do the same for "benefits_week30"
# Q5: Use Roy model
# Roy model-ATE lower bound
-(EY_D0 - minY)*Pr_D0
# Roy model-ATE upper bound
(EY_D1 - minY)*Pr_D1
#LEO: agree, implemented the correct way
# Q6: Use MTR, MTS, and both #LEO: think this was incorrect, at least labels
# MTS-ATE lower bound, same as before
(EY_D1 - maxY)*Pr_D1 + (minY - EY_D0)*Pr_D0
# MTS-ATE upper bound, new
EY_D1 - EY_D0
# MTR-ATE lower bound
0
# MTR-ATE upper bound, same as before
(EY_D1 - minY)*Pr_D1 + (maxY - EY_D0)*Pr_D0
# Apply both MTS and MTR
# ATE lower bound
0
# ATE upper bound LEO: I understand that this is negative, but it is still an upper bound in terms of magnitude, and the equation is for the 'upper bound' of treatment magnitude
EY_D1 - EY_D0
# Q7:
#Leo: My interpretation is that we only use the dummy educ_bachelormaster as MIV
Pr_Z1 <- mean(df$educ_bachelormaster)
Pr_Z0 <- 1 - mean(df$educ_bachelormaster)
LB_d1_z0 = (1)/Pr_Z0 #this is still incomplete, need your R fluency to quickly code this, but I know how to in terms of eq
LB_d1_z1 = (1)/Pr_Z1
LB_d0_z0 = (1)/Pr_Z0
LB_d0_z1 = (1)/Pr_Z1
UB_d1_z0 = (1)/Pr_Z0
UB_d1_z1 = (1)/Pr_Z1
UB_d0_z0 = (1)/Pr_Z0
UB_d0_z1 = (1)/Pr_Z1
LB_d1 = Pr_Z0 * LB_d1_z0 + Pr_Z1 * max(LB_d1_z0, LB_d1_z1)
LB_d0 = Pr_Z0 * LB_d0_z0 + Pr_Z1 * max(LB_d0_z0, LB_d0_z1)
UB_d1 = Pr_Z1 * UB_d1_z1 + Pr_Z0 * min(UB_d1_z0, UB_d1_z1)
UB_d0 = Pr_Z1 * UB_d0_z1 + Pr_Z0 * min(UB_d0_z0, UB_d0_z1)
# Have a look at two last slides of the lecrure to add something else
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(foreign)
library(cobalt)
library(data.table)
library(dynlm)
library(stargazer)
library(plm)
library(dplyr)
library(Hmisc)
library(ivreg)
cd <- 'C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/code'
dt <- 'C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/data'
tb <- 'C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/Final'
setwd(dt)
df <- as.data.frame(read.dta('searchperiod.dta'))
setwd(tb)
Pr10s <- mean(df[["benefits_week10"]][df[["searchperiod"]]==1])
print(Pr10s,digits = 3)
Pr30s <- mean(df[["benefits_week30"]][df[["searchperiod"]]==1])
print(Pr30s,digits = 3)
Pr10ns <- mean(df[["benefits_week10"]][df[["searchperiod"]]==0])
print(Pr10ns,digits = 3)
Pr30ns <- mean(df[["benefits_week30"]][df[["searchperiod"]]==0])
print(Pr30ns,digits = 3)
df_search <- group_by(df, searchperiod)
sums <- summarise(df_search, across(names(df[,c(4:23)]), mean, na.rm=T))
sum_tbl <- xtable(t(sums))
print.xtable(sum_tbl,type="latex", file="sum_tbl.stex")
bal.tab(df, treat = df$searchperiod,
disp = c("means", "sds"), un = TRUE,
stats = c("mean.diffs"))
vec <- c(names(df)[4:9],names(df)[11:13],names(df)[15:21],names(df)[23])
vec <- paste(vec, collapse="+")
reg_cov10 <- paste("benefits_week10", vec, sep="~")
reg_cov30 <- paste("benefits_week30", vec, sep="~")
r1 <- lm(benefits_week10~searchperiod,data=df)
summary(r1)
r2 <- lm(benefits_week30~searchperiod,data=df)
summary(r2)
r3 <- lm(reg_cov10,data=df)
summary(r3)
r4 <- lm(reg_cov30,data=df)
summary(r4)
stargazer(r1, r2, r3, r4,
type = "latex")
View(df)
source('C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/code/StasBounds.R', echo=TRUE)
# ATE lower bound
(EY_D1 - maxY)*Pr_D1 + (minY - EY_D0)*Pr_D0
# ATE upper bound
(EY_D1 - minY)*Pr_D1 + (maxY - EY_D0)*Pr_D0
EY_D1 <- mean(df[df$searchperiod == 1,]$benefits_week10)
EY_D0 <- mean(df[df$searchperiod == 0,]$benefits_week10)
Pr_D1 <- mean(df$searchperiod)
Pr_D0 <- 1 - mean(df$searchperiod)
minY <- 0
maxY <- 1
# Lower bound
EY_D1*Pr_D1 - EY_D0*Pr_D0+(minY+maxY)*Pr_D0-maxY
# Upper bound
EY_D1*Pr_D1 - EY_D0*Pr_D0+(minY+maxY)*Pr_D0-minY
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(foreign)
library(cobalt)
library(data.table)
library(dynlm)
library(stargazer)
library(plm)
library(dplyr)
library(Hmisc)
library(ivreg)
cd <- 'C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/code'
dt <- 'C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/data'
tb <- 'C:/Users/sindr/Desktop/Tinbergen/2nd-year/Block 1/Applied Microeconometrics/Assignments/Final'
setwd(dt)
df <- as.data.frame(read.dta('searchperiod.dta'))
setwd(tb)
Pr10s <- mean(df[["benefits_week10"]][df[["searchperiod"]]==1])
print(Pr10s,digits = 3)
Pr30s <- mean(df[["benefits_week30"]][df[["searchperiod"]]==1])
print(Pr30s,digits = 3)
Pr10ns <- mean(df[["benefits_week10"]][df[["searchperiod"]]==0])
print(Pr10ns,digits = 3)
Pr30ns <- mean(df[["benefits_week30"]][df[["searchperiod"]]==0])
print(Pr30ns,digits = 3)
df_search <- group_by(df, searchperiod)
sums <- summarise(df_search, across(names(df[,c(4:23)]), mean, na.rm=T))
sum_tbl <- xtable(t(sums))
print.xtable(sum_tbl,type="latex", file="sum_tbl.stex")
bal.tab(df, treat = df$searchperiod,
disp = c("means", "sds"), un = TRUE,
stats = c("mean.diffs"))
vec <- c(names(df)[4:9],names(df)[11:13],names(df)[15:21],names(df)[23])
vec <- paste(vec, collapse="+")
reg_cov10 <- paste("benefits_week10", vec, sep="~")
reg_cov30 <- paste("benefits_week30", vec, sep="~")
r1 <- lm(benefits_week10~searchperiod,data=df)
summary(r1)
r2 <- lm(benefits_week30~searchperiod,data=df)
summary(r2)
r3 <- lm(reg_cov10,data=df)
summary(r3)
r4 <- lm(reg_cov30,data=df)
summary(r4)
stargazer(r1, r2, r3, r4,
type = "latex")
EY_D1 <- mean(df[df$searchperiod == 1,]$benefits_week10)
EY_D0 <- mean(df[df$searchperiod == 0,]$benefits_week10)
Pr_D1 <- mean(df$searchperiod)
Pr_D0 <- 1 - mean(df$searchperiod)
minY <- 0
maxY <- 1
# Lower bound
EY_D1*Pr_D1 - EY_D0*Pr_D0+(minY+maxY)*Pr_D0-maxY
# Upper bound
EY_D1*Pr_D1 - EY_D0*Pr_D0+(minY+maxY)*Pr_D0-minY
EY_D1_30 <- mean(df[df$searchperiod == 1,]$benefits_week30)
EY_D0_30 <- mean(df[df$searchperiod == 0,]$benefits_week30)
# Lower bound
EY_D1_30*Pr_D1 - EY_D0_30*Pr_D0+(minY+maxY)*Pr_D0-maxY
# Upper bound
EY_D1_30*Pr_D1 - EY_D0_30*Pr_D0+(minY+maxY)*Pr_D0-minY
?t.test
t.test(Pr10s-Pr10ns)
t.test(df[["benefits_week10"]][df[["searchperiod"]]==1]-df[["benefits_week10"]][df[["searchperiod"]]==0])
t.test(df[["benefits_week10"]][df[["searchperiod"]]==1]-df[["benefits_week10"]][df[["searchperiod"]]==0])
t.test(df[["benefits_week30"]][df[["searchperiod"]]==1]-df[["benefits_week30"]][df[["searchperiod"]]==0])
t.test(df[["benefits_week10"]][df[["searchperiod"]]==1]-df[["benefits_week10"]][df[["searchperiod"]]==0])
View(df)
vec <- c(names(df)[4:9],names(df)[11:13],names(df)[15:21],names(df)[23])
vec <- paste(vec, collapse="+")
vecu <- c("searchperiod", "age", "children", "period1", "period4", "location1", "location2", "location3", "location4", "educ_unknown")
vecu <- paste(vecu, collapse="+")
reg_cov10 <- paste("benefits_week10", vec, sep="~")
reg_cov30 <- paste("benefits_week30", vec, sep="~")
reg_cov10u <- paste("benefits_week10", vecu, sep="~")
reg_cov30u <- paste("benefits_week30", vecu, sep="~")
r5 <- lm()
r5 <- lm(reg_cov10u,data = df)
summary(r5)
r6 <- lm(reg_cov30u,data=df)
summary(r6)
stargazer(r1, r2, r3, r4, r5, r6,
type = "latex")
stargazer(r1,r3, r5,
type = "latex",file="stargazer10.stex")
stargazer(r2,r4, r6,
type = "latex",file="stargazer30.stex")
stargazer(r1,r3, r5,
type = "asis")
stargazer(r2,r4, r6,
type = "asis")
stargazer(r1,r3, r5,
type = "text")
stargazer(r2,r4, r6,
type = "text")
# Lower bound
- (EY_D0-minY)*Pr_D0
# Upper bound
(EY_D1-minY)*Pr_D1
EY_D1_30 <- mean(df[df$searchperiod == 1,]$benefits_week30)
EY_D0_30 <- mean(df[df$searchperiod == 0,]$benefits_week30)
# Lower bound
EY_D1_30*Pr_D1 - EY_D0_30*Pr_D0+(minY+maxY)*Pr_D0-minY
# Upper bound
EY_D1_30*Pr_D1 - EY_D0_30*Pr_D0+(minY+maxY)*Pr_D0-maxY
# Lower bound
- (EY_D0-maxY)*Pr_D0
# Upper bound
(EY_D1-maxY)*Pr_D1
# Lower bound
(EY_D1-maxY)*Pr_D1
# Upper bound
- (EY_D0-maxY)*Pr_D0
EY_D1_30 <- mean(df[df$searchperiod == 1,]$benefits_week30)
EY_D0_30 <- mean(df[df$searchperiod == 0,]$benefits_week30)
# Lower bound
EY_D1_30*Pr_D1 - EY_D0_30*Pr_D0+(minY+maxY)*Pr_D0-maxY
# Upper bound
EY_D1_30*Pr_D1 - EY_D0_30*Pr_D0+(minY+maxY)*Pr_D0-minY
